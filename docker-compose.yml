services:
  postgres_db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: MOVIE_REVIEW
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo_db:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  movie_service:
    build:
      context: .
      dockerfile: movie_service/Dockerfile
    depends_on:
      - postgres_db
      - kafka
      - admin-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/moviedb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8080:8080"

  image_service:
    build:
      context: .
      dockerfile: image_service/Dockerfile
    depends_on:
      - mongo_db
      - kafka
      - admin-server
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo_db:27017/imagesdb
    ports:
      - "8081:8081"

  admin-server:
    build:
      context: .
      dockerfile: admin_server/Dockerfile
    ports:
      - "9090:9090"


volumes:
  postgres_data:
  mongo_data: